# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- feature/vendor_automation

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'


steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'


- task: UsePythonVersion@0
  inputs:
    versionSpec: '2.*'
    addToPath: true

- script: 
    python -m pip install --upgrade pip 
  displayName: 'Updating pip'

- script: 
    pip install requests 
  displayName: 'Install required python modules'
- script: 
    echo %cd%
  displayName: 'Wrting current working directory'

- script: | 
    python tools/setup_vendor.py
  displayName: 'Setting up vendors'

#- script: | 
#    GenProject.bat
#  workingDirectory: 'GraphicsEngine'
#  displayName: 'Running premake'

- script: |
    dir
  displayName: 'Running dir in main folder'

- script: |
    dir
  workingDirectory: 'GraphicsEngine'
  displayName: 'Running dir in engine folder'

- script: |
    dir
  workingDirectory: 'GraphicsEngine/vendor'
  displayName: 'Running dir in vendor folder'

- script: |
    dir
  workingDirectory: 'GraphicsEngine/GraphicsEngien/vendor/libs'
  displayName: 'Running dir in vendor folder'

- task: VSBuild@1
  inputs:
    platform: 'x64'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    